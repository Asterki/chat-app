import React, { useRef } from 'react';

import * as Dialog from '@radix-ui/react-dialog';

import { HiOutlineUserCircle } from 'react-icons/hi';

interface TFADialogProps {
  open: boolean;
  onClose: () => void;
  onSubmit: (tfaCode: string) => void;
}

const TFADialog: React.FC<TFADialogProps> = ({ open, onClose, onSubmit }) => {
  const tfaCodeRef = useRef<HTMLInputElement>(null);

  const handleSubmit = () => {
    const tfaCode = tfaCodeRef.current!.value;
    onSubmit(tfaCode);
  };

  return (
    <Dialog.Root open={open} onOpenChange={onClose}>
      <Dialog.Portal>
        <Dialog.Overlay className='bg-black/50 data-[state=open]:animate-overlayShow fixed inset-0 z-20' />
        <Dialog.Content className='data-[state=open]:animate-contentShow fixed top-[50%] left-[50%] max-h-[85vh] w-[90vw] max-w-[450px] translate-x-[-50%] translate-y-[-50%] rounded-md dark:bg-gray-700 bg-slate-100 p-4 dark:text-white text-slate-700 focus:outline-none z-30 flex items-center flex-col gap-2'>
          <h1 className='text-2xl'>
            <HiOutlineUserCircle className='inline-block' />
            TFA Code
          </h1>
          <input
            type='password'
            className='dark:bg-gray-800 bg-slate-200 rounded-md p-2 dark:text-white w-full'
            placeholder='Code generated by your authenticator app'
            ref={tfaCodeRef}
          />
          <button className='p-2 bg-blue-400 rounded-md mt-2 w-1/2 text-white' onClick={handleSubmit}>
            Submit
          </button>
        </Dialog.Content>
      </Dialog.Portal>
    </Dialog.Root>
  );
};

export default TFADialog;